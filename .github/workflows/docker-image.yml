
name: "CI/CD frontend+ios"
on:
  push:
    branches:
      - main

jobs:
  code-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       node-version: [20]
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - uses: actions/setup-node@v1
      with:
       node-version: ${{ matrix.node-version }}
       
    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
      
    - uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        
    - name: Install Dependencies
      run: | 
        npm install -g jetify
        yarn && npx jetify
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::673004107015:role/ECR_ROLE_Reely-ios
        aws-region: ap-northeast-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ns-reely-ecr/reely-ios
        IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -f Reely/.dockerfile --platform arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG Reely/.
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  ios:
      runs-on: macos-latest
      strategy:
        matrix:
          node-version: [20]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: Get yarn cache
          id: yarn-cache
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - uses: actions/cache@v2
          with:
            path: ${{ steps.yarn-cache.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        - name: Install Dependencies
          run: yarn
        - name: Install Podfiles
          run: cd Reely/ios && npx pod-install
        - name: Build example app
          run: yarn ios
       
        - name: Build iOS App
          run: |
            cd Reely/ios && xcodebuild -scheme Reely -sdk iphonesimulator -configuration Debug
            
